JSON name/value pair is written as<br />
A.	name&#8217; : &#8216;value&#8217;<br />
B.	name = &#8216;value&#8217;<br />
C.	name = &#8220;value&#8221;<br />
D.	&#8220;name&#8221; : &#8220;value&#8221;<br />
Ans: D</p>
<p>JSON strings have to be in<br />
A.	single quote<br />
B.	double quote<br />
C.	single quote or double quote<br />
Ans:B</p>
<p>Which of the following code will return a valid JSON object?<br />
A.	JSON.parse(&#8216;({&#8220;FirstName&#8221;: &#8220;John&#8221;, &#8220;LastName&#8221;:&#8221;Doe&#8221;})&#8217;);<br />
B.	JSON.parse(&#8220;{&#8216;FirstName&#8217;: &#8216;John&#8217;, &#8216;LastName&#8217;:&#8217;Doe&#8217;}&#8221;);<br />
C.	JSON.parse(&#8220;({&#8216;FirstName&#8217;: &#8216;John&#8217;, &#8216;LastName&#8217;:&#8217;Doe&#8217;})&#8221;);<br />
D.	JSON.parse(&#8216;{&#8220;FirstName&#8221;: &#8220;John&#8221;, &#8220;LastName&#8221;:&#8221;Doe&#8221;}&#8217;);<br />
Ans:D</p>
<p>Which of these is proper a JSON array?<br />
A.	{ &#8220;letters&#8221; : [ &#8220;a&#8221;, &#8220;b&#8221;, &#8220;c&#8221;; ] }<br />
B.	{ &#8216;letters&#8217; : {&#8220;a&#8221;, &#8220;b&#8221;, &#8220;c&#8221; } }<br />
C.	{ &#8220;letters&#8221; : [ a, b, c ] }<br />
D.	{ &#8220;letters&#8221; : [ &#8220;a&#8221;, &#8220;b&#8221;, &#8220;c&#8221; ] }<br />
Ans:D</p>
<p>In the below notation, Employee is of type { &#8220;Employee&#8221;: [ &#8220;Amy&#8221;, &#8220;Bob&#8221;, &#8220;John&#8221; ] }<br />
A.	Not a valid JSON string<br />
B.	Array<br />
C.	Class<br />
D.	Object<br />
Ans:B</p>
<p>Which of the following is not a JSON type?<br />
A.	Object<br />
B.	date<br />
C.	Array<br />
D.	string<br />
Ans:B</p>
<p>Which of these is correct about the JSON standard?<br />
A.	It is an open standard<br />
B.	It is privately developed<br />
C.	It requires a license to use<br />
Ans:A</p>
<p>What is the file extension of JSON?<br />
A.	.jn<br />
B.	.js<br />
C.	.jsn<br />
D.	.json<br />
Ans:D</p>
<p>In modern websites what is the common usage for JSON?<br />
A.	To store information remotely.<br />
B.	To send and receive bits of data.<br />
C.	To store information locally.<br />
Ans:B</p>
<p>In the below notation, Employee is of type { &#8220;Employee&#8221;: { &#8220;Name&#8221;: &#8220;Amy&#8221;, &#8220;Age&#8221;: 25 } }<br />
A.	Object<br />
B.	Array<br />
C.	Class<br />
D.	Not a valid JSON string<br />
Ans:A</p>
<p>Which answer represents the following order of TYPES? Object, String, Boolean, Number<br />
A.	&#8220;{ }&#8221;, &#8220;a string&#8221;, &#8220;false&#8221;, &#8220;0&#8221;<br />
B.	[ ], 0, &#8220;true&#8221;, &#8220;0&#8221;<br />
C.	{ }, &#8220;0&#8221;, false, 0<br />
D.	{ }, hello, &#8220;false&#8221;, &#8220;0&#8221;<br />
Ans:C</p>
<p>In this example, what is the TYPE of employee? { &#8220;employee&#8221; : { &#8220;type&#8221; : &#8220;Director&#8221;, &#8220;functions&#8221; : [&#8216;sales&#8217;, &#8216;marketing&#8217;] } }<br />
A.	String<br />
B.	Director<br />
C.	type<br />
D.	Object<br />
Ans:D</p>
<p>Given this JSON example: { &#8220;Employee&#8221;: { &#8220;Name&#8221;: &#8220;Amy&#8221;, &#8220;Age&#8221;: 25 } }; What is the type of Employee.Age ?<br />
A.	Number<br />
B.	Object<br />
C.	Array<br />
D.	String<br />
Ans:A</p>
<p>Which of these is a benefit JSON has over XML?<br />
A.	JSON is more forgiving of poor formatting<br />
B.	JSON has less markup requirements and therefore is lighter than XML<br />
C.	JSON can be written poorly and still be parsed<br />
D.	JSON does not need to be stored in a file to be sent remotely<br />
Ans:B</p>
<p>Which statement about the replacer parameter in JSON.stringify() is true?<br />
A.	If null or omitted, all properties of the object are included in the resulting JSON string<br />
B.	If a function, transforms values and properties encountered while stringifying<br />
C.	All three statements are true<br />
D.	If an array, specifies the names of the properties in the object to include in the resulting JSON string<br />
Ans:C</p>
<p>What does JSON stand for?<br />
A.	JavaScript Object Nomenclature<br />
B.	JavaScript Objective Notation<br />
C.	JavaScript Object Notation<br />
D.	JavaScript Orientated Nomenclature<br />
Ans:C</p>
<p>JSON elements are separated by<br />
A.	semi-colon<br />
B.	line break<br />
C.	comma<br />
D.	white space<br />
Ans:C</p>
<p>What keywords are reserved in JSON and cannot be used as keys?<br />
A.	Value<br />
B.	Object<br />
C.	There are none.<br />
D.	Key<br />
Ans:C</p>
<p>What kind of format is JSON, and what does the acronym mean?<br />
A.	A lightweight data-encoding framework. Java Omnipresent Notation.<br />
B.	A lightweight data-interchange format. JavaScript Object Notation.<br />
C.	A lightweight data-interchange format. Java Objective Notion.<br />
D.	A lightweight database framework. JavaScript Object Notation.<br />
Ans: B</p>
<p>Can you use a double quote inside a JSON string?<br />
A.	Yes, if you use the ascii code.<br />
B.	Yes, you can use it without any special treatment<br />
C.	Yes, if it is escaped like ( \&#8221; )<br />
D.	No, you should use single quotes<br />
Ans:C</p>
<p>In this example, what is the TYPE of employee.functions? { &#8220;employee&#8221; : { &#8220;type&#8221; : &#8220;Director&#8221;, &#8220;functions&#8221; : [&#8216;sales&#8217;, &#8216;marketing&#8217;] } }<br />
A.	String<br />
B.	Object<br />
C.	Array<br />
D.	Sales, Marketing<br />
Ans:C</p>
<p>Which statement about the reviver parameter in JSON.parse() is true?<br />
A.	All three statements are true<br />
B.	Used to reform generic objects into instances of pseudo-classes<br />
C.	A function that will be called for every key and value at every level of the final result<br />
D.	Each value will be replaced by the result of the reviver function<br />
Ans: A</p>
<p>Which of the following is a valid JSON string?<br />
A.	{ &#8220;meals&#8221; : { &#8220;breakfast&#8221; , &#8220;lunch&#8221; , &#8220;dinner&#8221; } }<br />
B.	{ &#8220;meals&#8221; : [ &#8220;breakfast&#8221; , &#8220;lunch&#8221; , &#8220;dinner&#8221; ] }<br />
C.	[ &#8220;meals&#8221; : { &#8220;breakfast&#8221; , &#8220;lunch&#8221; , &#8220;dinner&#8221; } ]<br />
D.	[ {&#8220;meals&#8221; : { &#8220;breakfast&#8221; , &#8220;lunch&#8221; , &#8220;dinner&#8221; } } ]<br />
Ans:B</p>
<p>Which of the following code will throw an error?<br />
A.	JSON.parse(null);<br />
B.	JSON.parse(&#8216;{}&#8217;);<br />
C.	JSON.parse(undefined);<br />
D.	JSON.parse(&#8216;[]&#8217;);<br />
Ans: C</p>
<p>Which statement about the toJSON method is true?<br />
A.	It customizes JSON stringification behavior<br />
B.	It allows an object to determine its own JSON representation<br />
C.	All three statements are true<br />
D.	It is internally called by JSON.stringify()<br />
Ans: C</p>
<p>Which of these data interchange formats has seen a decline in usage in favor of JSON?<br />
A.	ASCII<br />
B.	Plain-text<br />
C.	SQL<br />
D.	XML<br />
Ans: D</p>
<p>True or false? A disadvantage of JSON is that it requires the use of JavaScript.<br />
A.	False, JSON is language independent.<br />
B.	False, JavaScript must be available although it is not necessary to use.<br />
C.	True, though all browsers have JavaScript enabled.<br />
D.	True, though JavaScript is readily available in today&#8217;s browsers.<br />
Ans: A</p>
<p>Which is true about JSON namespacing?<br />
A.	JSON namespaces can be accessed immediately after receiving data.<br />
B.	JSON namespaces can be accessed after parsing data.<br />
C.	JSON doesn&#8217;t have namespaces. Though every object is inherently a namespace.<br />
Ans:C</p>
<p>What function will convert a JavaScript object to a JSON string?<br />
A.	JSON.text()<br />
B.	JSON.serialize()<br />
C.	JSON.toString()<br />
D.	JSON.stringify()<br />
Ans: D</p>
<p>In this example, what would the VALUE of employee.functions[1] be? { &#8220;employee&#8221; : { &#8220;type&#8221; : &#8220;Director&#8221;, &#8220;functions&#8221; : [&#8216;sales&#8217;, &#8216;marketing&#8217;] } }<br />
A.	null<br />
B.	undefined<br />
C.	marketing<br />
D.	sales<br />
Ans: C</p>
<p>What is the MIME type of JSON?<br />
A.	application/x-json<br />
B.	text/json<br />
C.	application/json<br />
D.	application/javascript<br />
Ans: C</p>
<p>In this example, what is the VALUE of employee.type? { &#8220;employee&#8221; : { &#8220;type&#8221; : &#8220;Director&#8221;, &#8220;functions&#8221; : [&#8216;sales&#8217;, &#8216;marketing&#8217;] } }<br />
A.	String<br />
B.	Object<br />
C.	Director<br />
Ans: C</p>
<p>In this example, what would the TYPE of employee.hireDate be? { &#8220;employee&#8221; : { &#8220;type&#8221; : &#8220;Director&#8221;, &#8220;functions&#8221; : [&#8216;sales&#8217;, &#8216;marketing&#8217;], &#8220;hireDate&#8221; : &#8220;March 8, 2011&#8221; } }<br />
A.	March 8, 2011<br />
B.	String<br />
C.	Date<br />
D.	Number<br />
Ans: B</p>
<p>What is JSONP meant to mitigate?<br />
A.	Size constraints of JSON<br />
B.	Cross-domain communication<br />
C.	Future proofing JSON as JavaScript changes.<br />
Ans: B</p>
<p>True or false? The order of elements in JSON arrays is always preserved.<br />
A.	False<br />
B.	True<br />
Ans: B</p>
<p>Which of these is supported as a JSON Value type?<br />
A.	Infiniti<br />
B.	Null<br />
C.	Undefined<br />
D.	NaN<br />
Ans: B</p>
<p>When coding a string object in JSON, what must separate the string and the value?<br />
A.	A space<br />
B.	A semicolon<br />
C.	A comma<br />
D.	A colon<br />
Ans: D</p>
<p>Does JSON support Unicode characters?<br />
A.	No, JSON has no support for any kind of character encoding.<br />
B.	No, JSON only has support for UTF-8 characters.<br />
C.	Yes, JSON has support for Unicode characters. Allowing for almost any information in any human language<br />
D.	Yes, only when stored as the key in a ( key : value ) pair.<br />
Ans: C</p>
<p>What is the value of obj in the following code? var obj = JSON.parse(&#8216;{&#8220;fruit&#8221;: &#8220;Apple&#8221;}&#8217;, function(k, v) { if (v == &#8220;Apple&#8221;) return &#8220;Orange&#8221; else return v; });<br />
A.	{ &#8220;fruit&#8221; : &#8220;Apple&#8221;}<br />
B.	{ &#8220;fruit&#8221; : &#8220;Orange&#8221;}<br />
C.	{&#8220;Orange&#8221;}<br />
D.	{&#8220;Apple&#8221;}<br />
Ans: B</p>
<p>Does whitespace matter in JSON?<br />
A.	No, it will be stripped out.<br />
B.	Yes, only within strings.<br />
C.	Yes, only outside of strings.<br />
D.	Yes, both inside and outside of strings<br />
Ans: B</p>
<p>What is the value of json in the following code? var cars = []; cars[0] = &#8216;Ford&#8217;; cars[1] = &#8216;Toyota&#8217;; cars[2] = &#8216;BMW&#8217;; var json = JSON.stringify({x: cars});<br />
A.	{&#8220;x&#8221;:[&#8216;Ford&#8217;,&#8217;Toyota&#8217;,&#8217;BMW&#8217;]}<br />
B.	{&#8220;x&#8221;:{&#8220;Ford&#8221;,&#8221;Toyota&#8221;,&#8221;BMW&#8221;}}<br />
C.	{&#8220;x&#8221;:[&#8220;Ford&#8221;,&#8221;Toyota&#8221;,&#8221;BMW&#8221;]}<br />
D.	{&#8220;cars&#8221;:[&#8220;Ford&#8221;,&#8221;Toyota&#8221;,&#8221;BMW&#8221;]}<br />
Ans: C</p>
<p>What is the value of json in the following code? var obj = { fruit: &#8216;apple&#8217;, toJSON: function () { return &#8216;orange&#8217;; } }; var json = JSON.stringify({x: obj});<br />
A.	{&#8220;x&#8221;:&#8221;orange&#8221;}<br />
B.	{&#8220;fruit&#8221;:&#8221;apple&#8221;}<br />
C.	{&#8220;x&#8221;:&#8221;apple&#8221;}<br />
D.	{&#8220;fruit&#8221;:&#8221;orange&#8221;}<br />
Ans: A</p>
<p>What types of values can you have in JSON key:value pairs?<br />
A.	Strings, Arrays, and Primitives<br />
B.	Arrays, Primitives, and Objects stored as strings<br />
C.	Strings, Arrays, Primitives and Objects<br />
D.	Strings only<br />
Ans: C</p>
<p>In what situation would you want to use XML over JSON?<br />
A.	When JSON is not offered.<br />
B.	When you need to use tags to structure your content.<br />
C.	You need message validation or you&#8217;re using XSLT.<br />
D.	Never, JSON is worlds better.<br />
Ans: C</p>
<p>What is a JSONStringer used for?<br />
A.	It is used to quickly create JSON text.<br />
B.	It quickly converts JSON to Java strings.<br />
C.	It is used to create number strings in JSON.<br />
D.	It is used to create JSON ordered pairs.<br />
Ans: A</p>
<p>Which of the following control characters cannot be used when writing a JSON string without escaping?<br />
A.	; or :<br />
B.	“ or \<br />
C.	< or ><br />
D.	/ or {<br />
Ans: B</p>
<p>What is the value of json in the following code? var days = {}; days[&#8216;Monday&#8217;] = true; days[&#8216;Wednesday&#8217;] = true; days[&#8216;Sunday&#8217;] = false; var json = JSON.stringify({x: days});<br />
A.	{&#8220;day&#8221;:{&#8220;Monday&#8221;:&#8221;true&#8221;,&#8221;Wednesday&#8221;:&#8221;true&#8221;,&#8221;Sunday&#8221;:&#8221;false&#8221;}}<br />
B.	{&#8220;x&#8221;:{&#8220;Monday&#8221;:true,&#8221;Wednesday&#8221;:true,&#8221;Sunday&#8221;:false}}<br />
C.	{&#8220;day&#8221;:{&#8220;Monday&#8221;:true,&#8221;Wednesday&#8221;:true,&#8221;Sunday&#8221;:false}}<br />
D.	{&#8220;x&#8221;:[&#8220;Monday&#8221;:true,&#8221;Wednesday&#8221;:true,&#8221;Sunday&#8221;:false]}<br />
Ans: B</p>
<p>How does JSON being &#8220;lightweight&#8221; translate into a benefit for the site visitors?<br />
A.	Faster transfer times over the internet<br />
B.	Parsing JSON is noticeably faster than parsing XML<br />
C.	Web apps have a smaller footprint<br />
Ans: A</p>
<p>What error does JSON.parse() throw when the string to parse is not valid JSON?<br />
A.	ReferenceError<br />
B.	EvalError<br />
C.	SyntaxError<br />
D.	TypeError<br />
Ans: C</p>
<p>What two structures is JSON built on?<br />
A.	A collection of name/value pairs, and an ordered list of values, or array.<br />
B.	A collection of object/item pairs, and an ordered list of pairs, or array.<br />
C.	A collection of name/value objects, and an ordered list of objects, or array.<br />
D.	A collection of native-value pairs, and an ordered list of arrays, or values.<br />
Ans: A</p>
<p>Which of the following is not a valid way to parse JSON string?<br />
A.	JSON.eval()<br />
B.	JSON.parse()<br />
C.	jQuery.parseJSON()<br />
D.	eval()<br />
Ans: A</p>
<p>What does JSONP stand for?<br />
A.	JSON Procedures<br />
B.	JSON Parsing<br />
C.	JSON with padding<br />
D.	JSON Programming<br />
Ans: C</p>
<p>Which of the following code will not throw an error?<br />
A.	JSON.parse(&#8221;);<br />
B.	JSON.parse(null);<br />
C.	JSON.parse();<br />
D.	JSON.parse({});<br />
Ans:B</p>
<p>How does JSON handle numeric values that cannot be represented by a sequence of digits (like Infiniti and Nan)?<br />
A.	They are stored as strings and then converted when parsed.<br />
B.	They are not permitted.<br />
C.	They are stored fine but it&#8217;s the parsers job to convert them to numeric values.<br />
Ans: B</p>
<p>Which of the following number formats are not used in JSON?<br />
A.	Octal and gate<br />
B.	Octal and binary<br />
C.	Binary and hexadecimal<br />
D.	Octal and hexadecimal<br />
Ans: D</p>
<p>What is used by the JSONObject and JSONArray constructors to parse JSON source strings?<br />
A.	JSONTokener<br />
B.	JSONParser<br />
C.	JParser<br />
D.	ParserJ<br />
Ans: A</p>
<p>Which statement about the space parameter in JSON.stringify() is false?<br />
A.	It controls spacing in the resulting JSON string<br />
B.	All three statements are false<br />
C.	It removes whitespace<br />
D.	It is an optional parameter<br />
Ans: C</p>
<p>True of False? The external form of a JSON object always begins and ends with {}<br />
A.	True<br />
B.	False<br />
Ans: A</p>
<p>True of False. The order of JSON objects is always preserved.<br />
A.	False<br />
B.	True<br />
Ans: A</p>
